{"version":3,"sources":["components/Filter/Filter.module.scss","components/App/App.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","Form","state","name","number","handleInputChange","e","target","value","setState","id","nanoid","handleSubmit","preventDefault","props","onSubmit","className","s","mainForm","this","htmlFor","nameInput","type","pattern","title","required","onChange","telInput","submitButton","Component","ContactList","contacts","onDelete","contactList","map","contactItem","contactName","contactButton","onClick","Filter","filterInput","App","filter","addContact","data","isAdded","Object","values","find","contact","console","log","alert","setFilter","filterContacts","lowFilter","toLowerCase","toLocaleLowerCase","includes","deleteContact","restContacts","filteredContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35d4b7df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__39Pp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3bZLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__3pvfU\",\"label\":\"ContactForm_label__26Q5G\",\"nameInput\":\"ContactForm_nameInput__X7-QF\",\"telInput\":\"ContactForm_telInput__1g4N5\",\"submitButton\":\"ContactForm_submitButton__1dPnB\"};","import { Component } from 'react/cjs/react.production.min';\r\n// import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport s from './ContactForm.module.scss';\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      id: nanoid(8),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.mainForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          className={s.nameInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={this.name}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label htmlFor=\"number\">Number</label>\r\n        <input\r\n          className={s.telInput}\r\n          type=\"tel\"\r\n          id=\"number\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={this.number}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <button className={s.submitButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// Form.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.exact({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.number.isRequired,\r\n//     }),\r\n//   ),\r\n// };\r\n\r\n// Ваоидация от props не работает, только от contacts после деструктуризвции\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\n\r\nexport default function ContactList(props) {\r\n  const { contacts, onDelete } = props;\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.contactItem} key={id}>\r\n          <p className={s.contactName}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.contactButton}\r\n            type=\"button\"\r\n            onClick={() => onDelete(name)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.exact({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.number.isRequired,\r\n//     }),\r\n//   ),\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.scss';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n      <input\r\n        className={s.filterInput}\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { Component } from 'react/cjs/react.production.min';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport s from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      { id: 'id-5', name: 'Vladislav Sl', number: '555-77-58' },\n    ],\n    filter: '',\n  };\n\n  addContact = data => {\n    const isAdded = Object.values(this.state.contacts).find(\n      contact => contact.name === data.name,\n    );\n    console.log(isAdded);\n\n    if (isAdded) {\n      alert('contact is added');\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, data],\n    }));\n  };\n\n  setFilter = data => {\n    this.setState({ filter: data.target.value });\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const lowFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(lowFilter),\n    );\n    return filteredContacts;\n  };\n\n  deleteContact = name => {\n    const { contacts } = this.state;\n\n    const restContacts = contacts.filter(contact => contact.name !== name);\n    console.log(restContacts);\n\n    this.setState({ contacts: restContacts });\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <div className={s.app}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.setFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App/App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__3o9pQ\",\"contactName\":\"ContactList_contactName__35CAF\",\"contactButton\":\"ContactList_contactButton__1Yhut\"};"],"sourceRoot":""}